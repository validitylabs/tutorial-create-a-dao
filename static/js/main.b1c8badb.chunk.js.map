{"version":3,"sources":["static sync /^/.//Step.*/.md$","static/Setup.md","serviceWorker.js","Step.js","States.js","TOC.js","LandingPage.js","index.js","static/Step0.md","static/Step1.md","static/Step2.md","static/Step3.md","static/Step4.md","static/Step5.md","static/Step6.md","static/Step7.md"],"names":["map","./Step0.md","./Step1.md","./Step2.md","./Step3.md","./Step4.md","./Step5.md","./Step6.md","./Step7.md","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Boolean","window","location","hostname","match","Step","require","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","directory","title","content","path","next","previous","_this2","_this$props","structure","setState","section","find","item","fetch","concat","then","response","text","catch","err","console","log","navigate","react_default","a","createElement","es","to","process","className","react_markdown_default","source","React","Component","list","prefix","name","TOC","loading","filter","_this$state","index","key","LandingPage","src_TOC","App","basename","src_LandingPage","src_Step","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1c8badb.chunk.js","sourcesContent":["var map = {\n\t\"./Step0.md\": 29,\n\t\"./Step1.md\": 30,\n\t\"./Step2.md\": 31,\n\t\"./Step3.md\": 32,\n\t\"./Step4.md\": 33,\n\t\"./Step5.md\": 34,\n\t\"./Step6.md\": 35,\n\t\"./Step7.md\": 36\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 135;","module.exports = __webpack_public_path__ + \"static/media/Setup.22613487.md\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { navigate } from \"@reach/router\";\nimport { Link } from \"@reach/router\";\n\nconst files = {\n  s0: require(\"./static/Step0.md\"),\n  s1: require(\"./static/Step1.md\"),\n  s2: require(\"./static/Step2.md\"),\n  s3: require(\"./static/Step3.md\"),\n  s4: require(\"./static/Step4.md\"),\n  s5: require(\"./static/Step5.md\"),\n  s6: require(\"./static/Step6.md\"),\n  s7: require(\"./static/Step7.md\")\n};\n\nclass Step extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      directory: null,\n      title: null,\n      content: null,\n      path: null,\n      next: null,\n      previous: null\n    };\n  }\n\n  componentDidMount() {\n    const { structure, directory, id } = this.props;\n    this.path = \"./static/Step\" + id + \".md\";\n    this.setState({ directory });\n\n    let section = structure.find(item => {\n      return item.directory === directory;\n    });\n\n    this.setState({\n      title: section.title,\n      directory\n    });\n\n    // console.log(\"current id \" + `${id}`);\n    // console.log(\"total length \" + `${section.list.length}`);\n    // if (id < section.list.length - 1) {\n    //   // it has next\n    //   let next = +id + 1;\n    //   this.setState({ next });\n    //   console.log(next);\n    // } else if (id > 0) {\n    //   // it has previous\n    //   this.setState({ previous: +id - 1 });\n    // }\n    // console.log(this.state.next, this.state.previous);\n\n    if (directory === \"DAO\") {\n      fetch(require(`./static/Step${id}.md`))\n        .then(response => {\n          return response.text();\n        })\n        .then(text => {\n          this.setState({\n            content: text\n          });\n        })\n        .catch(err => {\n          console.log(err);\n          navigate(\"/\");\n        });\n    } else {\n      // directory === \"prep\"\n      fetch(require(`./static/Setup.md`))\n        .then(response => {\n          return response.text();\n        })\n        .then(text => {\n          this.setState({\n            content: text\n          });\n        })\n        .catch(err => {\n          console.log(err);\n          navigate(\"/\");\n        });\n    }\n  }\n\n  render() {\n    // render out the markdown test being read\n    return (\n      <div>\n        <header>\n          <h1>\n            <Link to={`${process.env.PUBLIC_URL}/${this.state.directory}`}>\n              {this.state.title}\n            </Link>\n          </h1>\n        </header>\n        <div className=\"content\">\n          <ReactMarkdown source={this.state.content} />\n        </div>\n        {/* <div>\n          <Link to={`/${this.state.directory}/${this.state.previous}`}>\n            Previous\n          </Link>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default Step;\n","const directoryPre = \"\";\n// const directoryPre = \"/BFSCon18\";\nconst toc = [\n  {\n    title: \"Preparation\",\n    directory: \"prep\",\n    list: [\n      {\n        prefix: \"Setup\",\n        name: \"List of tools\"\n      }\n    ]\n  },\n  {\n    title: \"Create a small DAO\",\n    directory: \"DAO\",\n    list: [\n      {\n        prefix: 0,\n        name: \"Pragma and contract structures\"\n      },\n      {\n        prefix: 1,\n        name: \"String type and getter\"\n      },\n      {\n        prefix: 2,\n        name: \"Constructor and msg.sender\"\n      },\n      {\n        prefix: 3,\n        name: \"Function and mapping\"\n      },\n      {\n        prefix: 4,\n        name: \"Require and modifier\"\n      },\n      {\n        prefix: 5,\n        name: \"Payable\"\n      },\n      {\n        prefix: 6,\n        name: \"Struct\"\n      },\n      {\n        prefix: \"Extra exercise\",\n        name: \"Make a proposal and vote\"\n      }\n    ]\n  }\n];\n\nvar structure = toc.map(item => ({\n  title: item.title,\n  //   directory: `${directoryPre}` + \"/\" + item.directory,\n  directory: item.directory,\n  list: item.list\n}));\n\nexport { directoryPre, structure };\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { insertParams } from \"@reach/router/lib/utils\";\nimport { navigate } from \"@reach/router/lib/history\";\nimport { structure } from \"./States\";\n\n// const structure = [\n//   {\n//     title: \"Preparation\",\n//     directory: \"prep\",\n//     list: [\n//       {\n//         prefix: \"Setup\",\n//         name: \"List of tools\"\n//       }\n//     ]\n//   },\n//   {\n//     title: \"Create a small DAO\",\n//     directory: \"DAO\",\n//     list: [\n//       {\n//         prefix: 0,\n//         name: \"Pragma and contract structures\"\n//       },\n//       {\n//         prefix: 1,\n//         name: \"String type and getter\"\n//       },\n//       {\n//         prefix: 2,\n//         name: \"Constructor and msg.sender\"\n//       },\n//       {\n//         prefix: 3,\n//         name: \"Function and mapping\"\n//       },\n//       {\n//         prefix: 4,\n//         name: \"Require and modifier\"\n//       },\n//       {\n//         prefix: 5,\n//         name: \"Payable\"\n//       },\n//       {\n//         prefix: 6,\n//         name: \"Struct\"\n//       },\n//       {\n//         prefix: \"Extra exercise\",\n//         name: \"Make a proposal and vote\"\n//       }\n//     ]\n//   }\n// ];\n\nclass TOC extends React.Component {\n  state = {\n    loading: true\n  };\n\n  componentDidMount() {\n    structure.filter(item => {\n      // console.log(\"log props directory\", this.props.directory);\n      // console.log(\"log item directory\", item.directory);\n      // if (item.directory === `${directoryPre}` + \"/\" + this.props.directory) {\n      if (item.directory === this.props.directory) {\n        this.setState({\n          title: item.title,\n          directory: item.directory,\n          list: item.list,\n          loading: false\n        });\n      }\n      console.log(this.state);\n    });\n    // .catch(() => {\n    //   navigate(\"/\");\n    // });\n  }\n\n  render() {\n    // const list = daoContents;\n    if (this.state.loading) {\n      return <h1>loading...</h1>;\n    }\n    const { title, directory, list } = this.state;\n    return (\n      <div>\n        <header>\n          <h1>\n            <Link to={`${process.env.PUBLIC_URL}/${directory}`}>{title}</Link>\n          </h1>\n        </header>\n        <div className=\"toc\">\n          <ul>\n            {list.map((item, index) => (\n              <li key={index}>\n                <Link to={`${process.env.PUBLIC_URL}/${directory}/${index}`}>\n                  {typeof item.prefix === \"number\" ? \"Step\" : \"\"} {item.prefix}{\" \"}\n                  - {item.name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TOC;\n","import React from \"react\";\nimport TOC from \"./TOC\";\n\nclass LandingPage extends React.Component {\n  render() {\n    const { structure } = this.props;\n    return (\n      <div>\n        <section>Welcome to the landing page!</section>\n        <ul>\n          {structure.map((item, index) => (\n            <TOC\n              key={index}\n              title={item.title}\n              directory={item.directory}\n              list={item.list}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","// import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\n// import App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Router, Link } from \"@reach/router\";\nimport \"./reset.css\";\nimport \"./single-col.css\";\nimport Step from \"./Step\";\nimport TOC from \"./TOC\";\nimport LandingPage from \"./LandingPage\";\n\nimport { structure } from \"./States\";\n\nconsole.log(structure);\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <header>\n          <h1>\n            <span>\n              <Link to={`${process.env.PUBLIC_URL}/`}>\n                Introduction to Smart Contract!\n              </Link>\n            </span>\n          </h1>\n        </header>\n\n        <Router basename=\"/DAOweb\">\n          <TOC path={`${process.env.PUBLIC_URL}/:directory`} />\n          <LandingPage\n            path={`${process.env.PUBLIC_URL}/`}\n            structure={structure}\n          />\n          <Step\n            path={`${process.env.PUBLIC_URL}/DAO/:id`}\n            directory=\"DAO\"\n            structure={structure}\n          />\n          <Step\n            path={`${process.env.PUBLIC_URL}/prep/:id`}\n            directory=\"prep\"\n            structure={structure}\n          />\n          <Step\n            path={`${process.env.PUBLIC_URL}/DAO/:id`}\n            directory=\"DAO\"\n            structure={structure}\n          />\n          <Step\n            path={`${process.env.PUBLIC_URL}/prep/:id`}\n            directory=\"prep\"\n            structure={structure}\n          />\n        </Router>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Step0.c51cffc1.md\";","module.exports = __webpack_public_path__ + \"static/media/Step1.9b59b3f4.md\";","module.exports = __webpack_public_path__ + \"static/media/Step2.8a5830df.md\";","module.exports = __webpack_public_path__ + \"static/media/Step3.bb24b690.md\";","module.exports = __webpack_public_path__ + \"static/media/Step4.f8e0c65d.md\";","module.exports = __webpack_public_path__ + \"static/media/Step5.60b69f84.md\";","module.exports = __webpack_public_path__ + \"static/media/Step6.3b732b57.md\";","module.exports = __webpack_public_path__ + \"static/media/Step7.0908b649.md\";"],"sourceRoot":""}